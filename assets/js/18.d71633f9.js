(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{650:function(t,s,a){t.exports=a.p+"assets/img/image-20201230103956749.e45a0980.png"},651:function(t,s,a){t.exports=a.p+"assets/img/image-20201230104937680.1219d04c.png"},652:function(t,s,a){t.exports=a.p+"assets/img/image-20201230145213515.b4a699a9.png"},653:function(t,s,a){t.exports=a.p+"assets/img/image-20201230105423161.41a3cedf.png"},654:function(t,s,a){t.exports=a.p+"assets/img/image-20201230105521708.d3e97628.png"},995:function(t,s,a){"use strict";a.r(s);var e=a(21),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_01-深入理解pod对象调度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_01-深入理解pod对象调度"}},[t._v("#")]),t._v(" 01.深入理解Pod对象调度")]),t._v(" "),e("h2",{attrs:{id:"_1-1-创建一个pod的工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-创建一个pod的工作流程"}},[t._v("#")]),t._v(" 1.1 创建一个Pod的工作流程")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Kubernetes基于list-watch机制的控制器架构，实现组件间交 互的解耦。")])]),t._v(" "),e("li",[e("p",[t._v("其他组件监控自己负责的资源，当这些资源发生变化时，kubeapiserver会通知这些组件，这个过程类似于发布与订阅")])])]),t._v(" "),e("blockquote",[e("p",[t._v("创建pod的整体流程")])]),t._v(" "),e("ul",[e("li",[t._v("1.用户提交创建Pod的请求，可以通过API Server的REST API ，也可用Kubectl命令行工具，支持Json和Yaml两种格式；")]),t._v(" "),e("li",[t._v("2.API Server 处理用户请求，存储Pod数据到Etcd；")]),t._v(" "),e("li",[t._v("3.Schedule通过和 API Server的watch机制，查看到新的pod，尝试为Pod绑定Node；")]),t._v(" "),e("li",[t._v("4.过滤主机：调度器用一组规则过滤掉不符合要求的主机（比如Pod指定了所需要的资源，那么就要过滤掉资源不够的主机）；")]),t._v(" "),e("li",[t._v("5.主机打分：对第一步筛选出的符合要求的主机进行打分，在主机打分阶段，调度器会考虑一些整体优化策略\n"),e("ul",[e("li",[t._v("比如：把一个Replication Controller的副本分布到不同的主机上，使用最低负载的主机等；")])])]),t._v(" "),e("li",[t._v("6.选择主机：选择打分最高的主机，进行binding操作，结果存储到Etcd中；")]),t._v(" "),e("li",[t._v("7.kubelet根据调度结果执行Pod创建操作：\n"),e("ul",[e("li",[t._v("1）绑定成功后，会启动container, docker run")]),t._v(" "),e("li",[t._v("2）scheduler会调用API Server的API在etcd中创建一个bound pod对象，描述在一个工作节点上绑定运行的所有pod信息。")]),t._v(" "),e("li",[t._v("3）运行在每个工作节点上的kubelet也会定期与etcd同步bound pod信息")]),t._v(" "),e("li",[t._v("4）一旦发现应该在该工作节点上运行的bound pod对象没有更新，则调用Docker API创建并启动pod内的容器。")])])])]),t._v(" "),e("p",[e("img",{staticStyle:{width:"800px","margin-left":"20px"},attrs:{src:a(650)}})]),t._v(" "),e("h2",{attrs:{id:"_1-2-pod中影响调度的主要属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-pod中影响调度的主要属性"}},[t._v("#")]),t._v(" 1.2 Pod中影响调度的主要属性")]),t._v(" "),e("h2",{attrs:{id:"_1-3-资源限制对pod调度的影响"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-资源限制对pod调度的影响"}},[t._v("#")]),t._v(" 1.3 资源限制对Pod调度的影响")]),t._v(" "),e("p",[e("img",{staticStyle:{width:"900px","margin-left":"20px"},attrs:{src:a(651)}})]),t._v(" "),e("h2",{attrs:{id:"_1-4-nodeselector-nodeaffinity"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-nodeselector-nodeaffinity"}},[t._v("#")]),t._v(" 1.4 nodeSelector & nodeAffinity")]),t._v(" "),e("h3",{attrs:{id:"_1-4-1-nodeselector匹配节点标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-nodeselector匹配节点标签"}},[t._v("#")]),t._v(" 1.4.1 nodeSelector匹配节点标签")]),t._v(" "),e("p",[t._v("nodeSelector：")]),t._v(" "),e("p",[t._v("用于将Pod调度到匹配Label的Node上，如果没有匹配的标签会调度失败。")]),t._v(" "),e("p",[t._v("作用：")]),t._v(" "),e("ul",[e("li",[t._v("约束Pod到特定的节点运行")]),t._v(" "),e("li",[t._v("完全匹配节点标签")])]),t._v(" "),e("p",[t._v("应用场景：")]),t._v(" "),e("ul",[e("li",[t._v("专用节点：根据业务线将Node分组管理")]),t._v(" "),e("li",[t._v("配备特殊硬件：部分Node配有SSD硬盘、GPU")])]),t._v(" "),e("blockquote",[e("p",[t._v("第一步：给k8s-node1中打标签 "),e("code",[t._v("disktype=ssd")])])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("node2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# kubectl label node k8s"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("node1 disktype"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ssd       # 将k8s"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("node1打一个标签为ssd\nnode"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("k8s"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("node1 labeled\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("node2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# kubectl "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" node "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("show"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("labels              # 可以查看到k8s"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("node1节点上就有了这个标签 \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("blockquote",[e("p",[t._v("2.添加nodeSelector字段到Pod配置中")])]),t._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("master ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim pod-nodeselector.yaml ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeselector\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("disktype")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ssd"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("blockquote",[e("p",[t._v("第三步：验证当前节点是否按照预期部署")])]),t._v(" "),e("ul",[e("li",[t._v('部署,可以看到只会部署到k8s-node1节点，因为node1节点有  disktype: "ssd" 标记')])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("master "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# kubectl apply "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f pod"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nodeselector"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("yaml \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("master "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# kubectl "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" pods "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o wide\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAME")]),t._v("            "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("READY")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STATUS")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RESTARTS")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AGE")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("        "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NOMINATED")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("READINESS")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GATES")]),t._v("\npod"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nodeselector    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   Running    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("117")]),t._v("s   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".36")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".74")]),t._v("  k8s"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("node1   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h3",{attrs:{id:"_1-4-2-nodeaffinitty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-nodeaffinitty"}},[t._v("#")]),t._v(" 1.4.2 nodeAffinitty")]),t._v(" "),e("p",[t._v("nodeAffinity：节点亲和性，与nodeSelector作用一样，但相比更灵活，")]),t._v(" "),e("p",[t._v("满足更多条件，诸如：")]),t._v(" "),e("ul",[e("li",[t._v("匹配有更多的逻辑组合，不只是字符串的完全相等")]),t._v(" "),e("li",[t._v("调度分为软策略和硬策略，而不是硬性要求")]),t._v(" "),e("li",[t._v("硬（required）：必须满足")]),t._v(" "),e("li",[t._v("软（preferred）：尝试满足，但不保证")]),t._v(" "),e("li",[t._v("操作符：In、NotIn、Exists、DoesNotExist、Gt、Lt")])]),t._v(" "),e("p",[e("img",{staticStyle:{width:"800px","margin-left":"20px"},attrs:{src:a(652)}})]),t._v(" "),e("h2",{attrs:{id:"_1-5-taint（污点）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-taint（污点）"}},[t._v("#")]),t._v(" 1.5 Taint（污点）")]),t._v(" "),e("p",[t._v("Taints：避免Pod调度到特定Node上")]),t._v(" "),e("p",[t._v("Tolerations：允许Pod调度到持有Taints的Node上")]),t._v(" "),e("p",[t._v("应用场景：")]),t._v(" "),e("ul",[e("li",[t._v("专用节点：根据业务线将Node分组管理，希望在默认情况下不调度该节点，只有配置了污点容忍才允许分配")]),t._v(" "),e("li",[t._v("配备特殊硬件：部分Node配有SSD硬盘、GPU，希望在默认情况下不调度该节点，只有配置了污点容忍才允许分配")]),t._v(" "),e("li",[t._v("基于Taint的驱逐")])]),t._v(" "),e("h2",{attrs:{id:"_1-6-tolerations（污点容忍）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-tolerations（污点容忍）"}},[t._v("#")]),t._v(" 1.6 Tolerations（污点容忍）")]),t._v(" "),e("p",[e("img",{staticStyle:{width:"800px","margin-left":"20px"},attrs:{src:a(653)}})]),t._v(" "),e("h2",{attrs:{id:"_1-7-nodename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-nodename"}},[t._v("#")]),t._v(" 1.7 nodeName")]),t._v(" "),e("ul",[e("li",[t._v("nodeName：指定节点名称，用于将Pod调度到指定的Node上，不经过调度器")]),t._v(" "),e("li",[e("img",{staticStyle:{width:"300px","margin-left":"20px"},attrs:{src:a(654)}})])])])}),[],!1,null,null,null);s.default=n.exports}}]);