(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{334:function(e,t,r){e.exports=r.p+"assets/img/image-20201215165654516.41cec4c0.png"},615:function(e,t,r){e.exports=r.p+"assets/img/image-20201215171431248.9a97f4ab.png"},981:function(e,t,r){"use strict";r.r(t);var a=r(21),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"_01-k8s中两种节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01-k8s中两种节点"}},[e._v("#")]),e._v(" 01.K8S中两种节点")]),e._v(" "),a("p",[e._v("==k8s集群分为管理节点和工作节点==")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("管理节点：")]),e._v("被称为master负载集群管理\n"),a("ul",[a("li",[e._v("当我们需要创建一个容器时，他帮我们调度到一个合适节点")]),e._v(" "),a("li",[e._v("当我们要执行具体某一个命令时，他可以帮组相应具体的请求")])])]),e._v(" "),a("li",[a("code",[e._v("工作节点:")]),e._v("被称为pod,我们的容器都是跑在工作节点的")])]),e._v(" "),a("h3",{attrs:{id:"_1-1-k8s架构详细图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-k8s架构详细图"}},[e._v("#")]),e._v(" 1.1 K8S架构详细图")]),e._v(" "),a("p",[a("img",{staticStyle:{width:"1000px","margin-left":"20px"},attrs:{src:r(334)}})]),e._v(" "),a("h3",{attrs:{id:"_1-2-k8s组件简化图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-k8s组件简化图"}},[e._v("#")]),e._v(" 1.2 K8S组件简化图")]),e._v(" "),a("p",[a("img",{staticStyle:{width:"800px","margin-left":"20px"},attrs:{src:r(615)}})]),e._v(" "),a("h2",{attrs:{id:"_02-k8s中master中的四个组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02-k8s中master中的四个组件"}},[e._v("#")]),e._v(" 02.K8S中master中的四个组件")]),e._v(" "),a("h3",{attrs:{id:"_2-1-kube-apiserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-kube-apiserver"}},[e._v("#")]),e._v(" 2.1 "),a("code",[e._v("kube-apiserver")])]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Kubernetes API，集群的统一入口，各组件协调者，以RESTful API提供接口服务")])]),e._v(" "),a("li",[a("p",[e._v("所有对象资源的增删改查和监听操作都交给APIServer处理后再提交给Etcd数据库进行存储")])]),e._v(" "),a("li",[a("p",[e._v("而且还提供认证、授权、访问控制、API注册和发现等机制；")])])]),e._v(" "),a("h3",{attrs:{id:"_2-2-kube-controller-manager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-kube-controller-manager"}},[e._v("#")]),e._v(" 2.2 "),a("code",[e._v("kube-controller-manager")])]),e._v(" "),a("p",[e._v("==实质就是一个后台启动的控制器，节点多了删除，节点少了添加，节点故障切换等==")]),e._v(" "),a("ul",[a("li",[e._v("controller manager 是通过API Server 进行协调的组件，绑定到单独的服务器Master上；")]),e._v(" "),a("li",[e._v("负责维护集群的状态，比如故障检测、自动扩展、滚动更新等；")])]),e._v(" "),a("h3",{attrs:{id:"_2-3kube-scheduler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3kube-scheduler"}},[e._v("#")]),e._v(" 2.3"),a("code",[e._v("kube-scheduler")])]),e._v(" "),a("p",[e._v("==调度器，比如我们创建容器，最终部署到那个节点合适，对各pod节点进行资源评估==")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("scheduler是通过API Server 进行协调的组件，绑定到单独的服务器Master上；")])]),e._v(" "),a("li",[a("p",[e._v("scheduler负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上；")])])]),e._v(" "),a("h3",{attrs:{id:"_2-4-etcd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-etcd"}},[e._v("#")]),e._v(" 2.4 etcd")]),e._v(" "),a("p",[e._v("==etcd实质就是一个数据库，只要kube-master能够连接即可==")]),e._v(" "),a("ul",[a("li",[e._v("它是一个集群分布式键值数据库，它可以提供分布式数据的一致性。")]),e._v(" "),a("li",[e._v("用于保存集群状态数据，比如Pod、Service等对象信息")])]),e._v(" "),a("h2",{attrs:{id:"_03-k8s中pod节点中两个重要组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-k8s中pod节点中两个重要组件"}},[e._v("#")]),e._v(" 03.k8s中pod节点中两个重要组件")]),e._v(" "),a("h3",{attrs:{id:"_3-1-kubelet（node-agent）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-kubelet（node-agent）"}},[e._v("#")]),e._v(" 3.1 kubelet（Node Agent）")]),e._v(" "),a("ul",[a("li"),e._v(" "),a("li",[e._v("接收APIServer中创建pod的请求，然后在本地调用docker的API去创建对应的容器")]),e._v(" "),a("li",[e._v("kubelet负责管理pods和它们上面的容器，images镜像、volumes、etc。")]),e._v(" "),a("li",[e._v("Agent负责监视绑定到其节点的一组Pod，并确保这些Pod正常运行，并且能实时返回这些Pod的运行状态。")])]),e._v(" "),a("h3",{attrs:{id:"_3-2-kube-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-kube-proxy"}},[e._v("#")]),e._v(" 3.2 kube-proxy")]),e._v(" "),a("p",[e._v("==实现将服务请求转发到具体那个docker容器的网络组件==")]),e._v(" "),a("ul",[a("li",[e._v("kube-proxy网络代理和负载均衡，负责为Service提供cluster内部的服务发现和负载均衡；")]),e._v(" "),a("li",[e._v("由于一个服务部署在K8S中多个node节点中，想要统一的对外提供访问就要用kube-proxy组件实现")])]),e._v(" "),a("h3",{attrs:{id:"_3-3-容器引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-容器引擎"}},[e._v("#")]),e._v(" 3.3 容器引擎")]),e._v(" "),a("ul",[a("li",[e._v("docker")])])])}),[],!1,null,null,null);t.default=s.exports}}]);