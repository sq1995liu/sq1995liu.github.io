(window.webpackJsonp=window.webpackJsonp||[]).push([[334],{1080:function(e,r,t){"use strict";t.r(r);var l=t(21),_=Object(l.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_01-线上服务发布过程（灰度发布）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_01-线上服务发布过程（灰度发布）"}},[e._v("#")]),e._v(" 01.线上服务发布过程（灰度发布）")]),e._v(" "),t("ul",[t("li",[e._v("如果部署项目的集群数量很大，那么常用灰度发布（比如有三十台后端服务server）\n"),t("ul",[t("li",[e._v("首先在一台机器上更新我们最新版本的代码，其余29台机器部署的是以前的代码，比较稳定（灰度发布）")]),e._v(" "),t("li",[e._v("更新的那太机器，要看更新后的服务日志，如果用户访问，在监控中没有发现大量的 4xx/5xx错误")]),e._v(" "),t("li",[e._v("证明新代码没问题，就会全量发布到身下的29机器中")])])]),e._v(" "),t("li",[e._v("docker发布\n"),t("ul",[t("li",[e._v("docker运行机器服务是非常快速的，你可以把原有的部署在docker中的服务不用停止")]),e._v(" "),t("li",[e._v("我只直接在机器上运行新的代码的docker，只需要在nginx的upstream里调整配置，指向新docker部署的服务即可")]),e._v(" "),t("li",[e._v("完成上面步骤用户流量现在访问的就是新代码docker中服务，旧代码docker中就没有用户流量")]),e._v(" "),t("li",[e._v("自己设定一个观察时间，如果新代码是问的的，可以直接关闭旧代码中的docker服务")])])])])])}),[],!1,null,null,null);r.default=_.exports}}]);